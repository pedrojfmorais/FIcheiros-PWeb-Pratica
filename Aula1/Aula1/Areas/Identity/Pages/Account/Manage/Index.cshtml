@page
@model IndexModel
@{
    ViewData["Title"] = "Profile";
    ViewData["ActivePage"] = ManageNavPages.Index;
}

<h3>@ViewData["Title"]</h3>
<partial name="_StatusMessage" for="StatusMessage" />
<div class="row">
    <div class="col-md-6">
        <form id="profile-form" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-floating">
                <label for="pageBgColor">Cor de fundo da página</label>
                <select name="pageBgColor" id="pageBgColor"
                        onchange="setCookie('PWEB_BgColor',this.value,1)"
                        class="form-control form-select form-select-sm">
                    <option value="white">White</option>
                    <option value="red">Red</option>
                    <option value="orange">Orange</option>
                    <option value="blue">Blue</option>
                </select>
            </div>
            <div class="form-floating">
                <div>
                    @if (Model.Input.Avatar == null)
                    {
                        <img id="MyAvatar" class="img-thumbnail" src="~/img/user.png" />
                    }
                    else
                    {
                        <img id="MyAvatar" class="img-thumbnail"
                         src="data:image/*;base64,@(Convert.ToBase64String(Model.Input.Avatar))" />
                    }
                </div>
                <div>
                    <label asp-for="Input.AvatarFile">Escolha uma imagem de perfil:</label>
                    <input type="file" accept=".png,.jpg,.jpeg,image/png,image/jpeg"
                           asp-for="Input.AvatarFile" class="form-control" 
                           onchange="document.getElementById('MyAvatar').src = window.URL.createObjectURL(this.files[0])" />
                    <span asp-validation-for="Input.AvatarFile" class="text-danger"></span>
                </div>
            </div>
            <div class="form-floating">
                <input asp-for="Username" class="form-control" disabled />
                <label asp-for="Username" class="form-label"></label>
            </div>
            <div class="form-floating">
                <input asp-for="Input.PrimeiroNome" class="form-control" />
                <label asp-for="Input.PrimeiroNome" class="form-label"></label>
                <span asp-validation-for="Input.PrimeiroNome" class="text-danger"></span>
            </div>
            <div class="form-floating">
                <input asp-for="Input.UltimoNome" class="form-control" />
                <label asp-for="Input.UltimoNome" class="form-label"></label>
                <span asp-validation-for="Input.UltimoNome" class="text-danger"></span>
            </div>
            <div class="form-floating">
                <input asp-for="Input.NIF" class="form-control" />
                <label asp-for="Input.NIF" class="form-label"></label>
                <span asp-validation-for="Input.NIF" class="text-danger"></span>
            </div>
            <div class="form-floating">
                <input asp-for="Input.DataNascimento" class="form-control" />
                <label asp-for="Input.DataNascimento" class="form-label"></label>
                <span asp-validation-for="Input.DataNascimento" class="text-danger"></span>
            </div>
            <div class="form-floating">
                <input asp-for="Input.PhoneNumber" class="form-control" />
                <label asp-for="Input.PhoneNumber" class="form-label"></label>
                <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
            </div>
            <button id="update-profile-button" type="submit" class="w-100 btn btn-lg btn-primary">Save</button>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        checkCookie();
        function setCookie(cname, cvalue, exdays) {
            console.log(cvalue);
            const d = new Date();
            d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
            let expires = "expires=" + d.toUTCString();
            document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
            document.body.style.setProperty("background-color", cvalue, "important");
        }
        function getCookie(cname) {
            let name = cname + "=";
            let ca = document.cookie.split(';');
            for (let i = 0; i < ca.length; i++) {
                let c = ca[i];
                while (c.charAt(0) == ' ') {
                    c = c.substring(1);
                }
                if (c.indexOf(name) == 0) {
                    return c.substring(name.length, c.length);
                }
            }
            return "";
        }
        function checkCookie() {
            let bgColor = getCookie("PWEB_BgColor");
            let select = document.getElementById('pageBgColor');
            if (bgColor != "") {
                document.body.style.setProperty("background-color", bgColor,
                    "important");
                select.value = bgColor;
            } else {
                alert("Please choose a Background color:");
            }
        }
    </script>
}
